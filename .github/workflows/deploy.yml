name: deployment-test
on:
  workflow_call:
    inputs:
      aws-role-to-assume:
        required: true
        type: string
  workflow_dispatch:
permissions:
  id-token: write
  contents: read
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.DAIS_MACHINE_GITHUB_TOKEN }}
          fetch-depth: 0
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ inputs.aws-role-to-assume }}
          aws-region: us-west-2
          role-session-name: AWSSession
      - name: Push values.yaml to S3
        id: push
        run: |
          projectName=$(python3 setup.py --name)
          projectVersion=$(python3 setup.py --version)
          gitLog=$(git log -1 --pretty=%B | sed s/\'/\"/ | sed s/\"/\'/ | sed s/'â†’'/'->'/)
          cat values.yaml > values-${projectVersion}.yaml
          echo 'image: ' >> values-${projectVersion}.yaml
          echo '   repository: '991853876083.dkr.ecr.us-west-2.amazonaws.com/${projectName} >> values-${projectVersion}.yaml
          echo '   pullPolicy: 'Always >> values-${projectName}.yaml
          echo '   tag: '${projectVersion} >> values-${projectVersion}.yaml
          aws s3 cp values-${projectVersion}.yaml s3://dais-helm-charts/packagevalues/${projectName}/values-${projectVersion}.yaml
          sed 's/all-dais-com-tls/all-dais-jm-com-tls/; s/dais.com/dais-jm.com/' ./values-${projectVersion}.yaml > values-${projectVersion}.yaml
          aws s3 cp values-${projectVersion}.yaml s3://jm-helm-charts/packagevalues/${projectName}/values-${projectVersion}.yaml
          echo "::set-output name=projectVersion::$projectVersion"
          echo "::set-output name=projectName::$projectName"
          echo "::set-output name=gitLog::$gitLog"
        env:
          AWS_REGION: ${{ secrets.ACTIONS_AWS_REGION }}
      - name: Deploy To Dev
        id: deploy-to-dev
        uses: gagoar/invoke-aws-lambda@master
        with:
          AWS_ACCESS_KEY_ID: ${{ secrets.ACTIONS_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.ACTIONS_AWS_SECRET_ACCESS_KEY }}
          REGION: ${{ secrets.ACTIONS_AWS_REGION }}
          FunctionName: spinnaker-trigger-dev-deployer
          Payload: '{"application": "${{ steps.push.outputs.projectName }}", "tag": "${{ steps.push.outputs.projectVersion }}", "gitLog": "${{ steps.push.outputs.gitLog }}", "repositoryName": "${{ github.repository }}"}'
      - name: Store response payload to file
        run: |
          echo '${{ fromJSON(steps.deploy-to-dev.outputs.response).Payload }}' > invocation-response.json
          cat invocation-response.json